'From Squeak3.2 of 11 July 2002 [latest update: #4956] on 27 January 2003 at 12:55:02 pm'!"Change Set:		PostscriptTurtleDate:			1 December 2002Author:			Stephane DucasseA turtle for generating postscript pictures from the scripts. Deal with changed y coordinatesadded penSize supportfixed bug with boundingbox null size"!Turtle subclass: #PostscriptTurtle	instanceVariableNames: 'stream minPoint maxPoint lastMove '	classVariableNames: ''	poolDictionaries: ''	category: 'TurtlePostscript'!!PostscriptTurtle methodsFor: 'initialize' stamp: 'sd 11/30/2002 23:03'!initialize	super initialize.	self flush.	maxPoint := 0@0.	minPoint := 595@840.			! !!PostscriptTurtle methodsFor: 'operations' stamp: 'sd 1/27/2003 12:51'!goAt: aPoint	| convertedPoint |	super goAt: aPoint.	convertedPoint := aPoint x @ (self startingPlace y - aPoint y).	lastMove := convertedPoint.	self storeMinMax: convertedPoint.	stream 		nextPutAll: convertedPoint x asString ; 		nextPutAll: ' ';		nextPutAll:  convertedPoint y asString ;		nextPutAll: ' lineto' ; cr. ! !!PostscriptTurtle methodsFor: 'operations' stamp: 'sd 1/27/2003 12:52'!jumpAt: aPoint	| convertedPoint |	super jumpAt: aPoint.	convertedPoint := aPoint x @ (self startingPlace y - aPoint y).	lastMove := convertedPoint.	self storeMinMax: convertedPoint.	self putMoveToInStream: convertedPoint.! !!PostscriptTurtle methodsFor: 'operations' stamp: 'sd 1/27/2003 12:53'!penSize: aNumber	super penSize: aNumber.	stream 		nextPutAll:  aNumber asString ;		nextPutAll: ' setlinewidth' ; cr ;		nextPutAll: 'stroke' ; cr ;		nextPutAll: 'newpath' ; cr.	lastMove isNil ifFalse: [ self putMoveToInStream: lastMove]	 ! !!PostscriptTurtle methodsFor: 'operations' stamp: 'sd 1/27/2003 12:51'!putMoveToInStream: aPoint	stream 		nextPutAll: aPoint x asString ; 		nextPutAll: ' ';		nextPutAll:  aPoint y asString ;		nextPutAll: ' moveto' ; cr.! !!PostscriptTurtle methodsFor: 'operations' stamp: 'sd 11/30/2002 22:11'!startingPlace	^ 300 @ 420! !!PostscriptTurtle methodsFor: 'operations' stamp: 'sd 11/30/2002 23:06'!storeMinMax: aPoint	minPoint := minPoint min: aPoint.	maxPoint := maxPoint max: aPoint.! !!PostscriptTurtle methodsFor: 'stream' stamp: 'sd 1/27/2003 11:13'!encaspulatedPostscript	| st |	st := ReadWriteStream on: (String new: 200).	st 		nextPutAll: '%!!PS-Adobe-3.0 EPSF-3.0' ; cr ;	 	nextPutAll: '%%BoundingBox: ';		nextPutAll: (minPoint x - 10) printString; 		nextPutAll: ' ';		nextPutAll: (minPoint y - 10 )printString; 		nextPutAll: ' ';		nextPutAll: (maxPoint x + 10) printString; 		nextPutAll: ' ';		nextPutAll: (maxPoint y + 10) printString; cr.	^ st contents! !!PostscriptTurtle methodsFor: 'stream' stamp: 'sd 11/30/2002 22:55'!flush	stream := ReadWriteStream on: (String new: 200).	self start.! !!PostscriptTurtle methodsFor: 'stream' stamp: 'sd 11/30/2002 23:12'!start	stream nextPutAll: 'newpath' ; cr! !!PostscriptTurtle methodsFor: 'stream' stamp: 'sd 12/1/2002 09:21'!stream	stream nextPutAll: 'stroke' ;cr.	stream nextPutAll: 'showpage' ; cr.	^ self encaspulatedPostscript , stream contents! !!PostscriptTurtle methodsFor: 'test' stamp: 'sd 12/1/2002 12:01'!coordinatesChecking	| caro |		caro := PostscriptTurtle new.	caro north.	caro go: 100.! !!PostscriptTurtle methodsFor: 'test' stamp: 'sd 11/30/2002 22:55'!square	| caro |		caro := PostscriptTurtle new.	4 timesRepeat: [caro turn: 90. caro go: 100].	caro inspect.! !!PostscriptTurtle class methodsFor: 'instance creation' stamp: 'sd 11/30/2002 22:20'!new	| inst |	inst := super new.	inst jumpAtStartingPlace.	^ inst! !!PostscriptTurtle class methodsFor: 'chapter generation' stamp: 'sd 12/14/2002 14:23'!generateChComp	self allScriptsBelongInCategory: #ChComp! !!PostscriptTurtle class methodsFor: 'chapter generation' stamp: 'sd 12/13/2002 11:19'!generateChLoop	self allScriptsBelongInCategory: #ChLoop! !!PostscriptTurtle class methodsFor: 'chapter generation' stamp: 'sd 12/13/2002 11:19'!generateChTurn	self allScriptsBelongInCategory: #ChTurn! !!PostscriptTurtle class methodsFor: 'chapter generation' stamp: 'sd 12/13/2002 18:47'!generateChVar	self allScriptsBelongInCategory: #ChVar! !!PostscriptTurtle class methodsFor: 'chapter generation' stamp: 'sd 12/13/2002 20:24'!generateChVarF	self allScriptsBelongInCategory: #ChVarF! !!PostscriptTurtle class methodsFor: 'postscript generation' stamp: 'sd 12/13/2002 11:41'!allScriptsBelongInCategory: aSymbol	"self allScriptsBelongInCategory: #ChapterTurning"	(Turtle organization listAtCategoryNamed: aSymbol)		do: [:each | self file: each]! !!PostscriptTurtle class methodsFor: 'postscript generation' stamp: 'sd 12/1/2002 12:06'!file: aSymbol	"self file: #titlePicture"	| st |	[st := FileStream newFileNamed: aSymbol asString, '.eps'.	st nextPutAll: (self singleTurtleExecuteScript: aSymbol).]	ensure: [st close]! !!PostscriptTurtle class methodsFor: 'postscript generation' stamp: 'sd 12/13/2002 11:41'!file: aSymbol prefixedWith: aCategorySymbol	"self file: #titlePicture prefixedWith: #ChapterTurning"	| st |	[st := FileStream newFileNamed: aCategorySymbol asString, aSymbol asString, '.eps'.	st nextPutAll: (self singleTurtleExecuteScript: aSymbol).]	ensure: [st close]! !!PostscriptTurtle class methodsFor: 'postscript generation' stamp: 'sd 12/1/2002 11:30'!singleTurtleExecuteScript: methodName	"PostscriptTurtle singleTurtleExecuteScript: #titlePicture"	| source   transformed sourceOnly |	source := (Turtle sourceCodeAt: methodName) string.	sourceOnly := source  copyFrom: (source indexOf: Character cr) to: source size.	transformed := sourceOnly copyReplaceAll: 'Turtle' with: 'PostscriptTurtle'.	transformed := transformed , '. ^ caro stream'.	^ Compiler evaluate: transformed! !PostscriptTurtle removeSelector: #center:!PostscriptTurtle removeSelector: #executeScript!PostscriptTurtle removeSelector: #go:!PostscriptTurtle removeSelector: #singleTurtleExecuteScript:!