'From Squeak3.2gamma of 14 January 2002 [latest update: #4743] on 19 February 2002 at 7:10:04 pm'!Morph subclass: #MiniTurtle	instanceVariableNames: 'direction '	classVariableNames: ''	poolDictionaries: ''	category: 'MiniTurtle Cat'!!MiniTurtle methodsFor: 'drawing' stamp: 'sd 2/19/2002 18:08'!drawOn: aCanvas	"self new openInWorld" 	| headLength center |	center := self center.	headLength := self height // 2 - 2.	aCanvas 		fillOval: (Rectangle center: center extent: self height -10)		color: self color.	aCanvas		line: center		to: center + (self pointInDirectionForDistance: headLength)		width: 1		color: Color black! !!MiniTurtle methodsFor: 'drawing' stamp: 'sd 2/19/2002 17:02'!drawOnSingle: aCanvas	"self new openInWorld" 	aCanvas 		fillOval: (Rectangle center: self center extent: self height -10)		color: self color.! !!MiniTurtle methodsFor: 'operations' stamp: 'sd 2/19/2002 18:06'!go: distance	self goAt: (self pointInDirectionForDistance: distance) + self center! !!MiniTurtle methodsFor: 'operations' stamp: 'sd 2/19/2002 17:55'!goAt: aPoint	"self new openInWorld"  self trailMorph	drawLineFrom: self center to: aPoint color: Color black size: 1.  self position: aPoint - (self extent // 2 rounded).! !!MiniTurtle methodsFor: 'operations' stamp: 'sd 2/19/2002 18:07'!jump: distance  self jumpAt: (self pointInDirectionForDistance: distance) + self center! !!MiniTurtle methodsFor: 'operations' stamp: 'sd 2/19/2002 17:59'!jumpAt: aPoint  self position: aPoint - (self extent // 2 rounded).! !!MiniTurtle methodsFor: 'operations' stamp: 'sd 2/19/2002 18:05'!pointInDirectionForDistance: aDistance	^ (direction degreeCos @ direction degreeSin negated * aDistance) asIntegerPoint ! !!MiniTurtle methodsFor: 'operations' stamp: 'sd 2/19/2002 18:00'!turn: degrees	self direction: self direction + degrees! !!MiniTurtle methodsFor: 'operations' stamp: 'sd 2/19/2002 18:10'!turnLeft: degrees	self turn: degrees! !!MiniTurtle methodsFor: 'operations' stamp: 'sd 2/19/2002 18:10'!turnRight: degrees	self turn: degrees negated! !!MiniTurtle methodsFor: 'accessing' stamp: 'sd 2/19/2002 16:56'!direction	^ direction! !!MiniTurtle methodsFor: 'accessing' stamp: 'sd 2/19/2002 17:16'!direction: anInteger	direction := anInteger.	self changed.! !!MiniTurtle methodsFor: 'initialization' stamp: 'sd 2/19/2002 16:56'!initialize	"self new openInWorld"	super initialize.	self extent: 50 @ 50.   	self direction: 0.   	self color: (Color r: 1.0 g: 0.097 b: 0.774)! !!MiniTurtle class methodsFor: 'as yet unclassified' stamp: 'sd 2/19/2002 19:09'!new	| mini | 	mini := super new.	mini openInWorld.	^ mini! !!PasteUpMorph methodsFor: 'turtle' stamp: 'sd 2/19/2002 17:36'!drawLineFrom: oldPoint to: newPoint color: aColor size: anInteger	"Draw a pen trail for aMorph, using its pen state (the pen is assumed to 	be down)."	"The turtleTrailsForm is created on demand when the first pen is put 	down and removed (to save space) when turtle trails are cleared."	| origin offset |	oldPoint = newPoint ifTrue: [^ self].	self createOrResizeTrailsForm.	origin := self topLeft.	turtlePen sourceForm width ~= anInteger		ifTrue: [turtlePen squareNib: anInteger].	offset := anInteger // 2 @ (anInteger // 2).	turtlePen color: aColor.	turtlePen 			drawFrom: (oldPoint - origin - offset) asIntegerPoint 			to: (newPoint - origin - offset) asIntegerPoint.	self invalidRect: ((oldPoint rect: newPoint) expandBy: anInteger)! !